import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { ApolloClient, InMemoryCache, gql } from "@apollo/client";
import Link from "next/link";

// better name?
interface Props {
  locations: Props[];
  id: number;
  name: string;
  type: string;
}

const Home: NextPage<Props> = ({ locations }: Props) => {
  return (
    <div>
      <Head>
        <title>Rick and Morty</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>Rick and Morty</h1>
      {locations.map((location) => (
        <Link href={`/location/${location.id}`} key={location.id}>
          <a>
            <div>
              <h3>Location Name: {location.name}</h3>
              <span>Type: {location.type}</span>
            </div>
          </a>
        </Link>
      ))}
    </div>
  );
};

export default Home;

export async function getStaticProps() {
  const client = new ApolloClient({
    uri: "https://rickandmortyapi.com/graphql",
    cache: new InMemoryCache(),
  });

  const { data } = await client.query({
    query: gql`
      query {
        locations {
          info {
            next
            prev
          }
          results {
            id
            name
            type
          }
        }
      }
    `,
  });

  return {
    props: {
      locations: data.locations.results,
    }, 
  };
}
