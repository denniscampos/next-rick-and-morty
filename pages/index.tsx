import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { ApolloClient, InMemoryCache, gql } from "@apollo/client";
import Link from "next/link";
import { GetStaticProps } from "next";
import Header from "../components/Header";

interface Props {
  locations: Props[];
  id: number;
  name: string;
  type: string;
}

const Home: NextPage<Props> = ({ locations }: Props) => {
  return (
    <div>
      <Head>
        <title>Rick and Morty</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main className={styles.container}>
        {locations.map((location) => (
          <Link href={`/location/${location.id}`} key={location.id}>
            <a>
              <section className={styles.location__card}>
                <div>
                  <h3 className={styles.location__card__name}>Location Name: {location.name}</h3>
                  <span className={styles.location__card__type}>Type: {location.type}</span>
                </div>
              </section>
            </a>
          </Link>
        ))}
      </main>
    </div>
  );
};

export default Home;

export const getStaticProps: GetStaticProps = async () => {
  const client = new ApolloClient({
    uri: "https://rickandmortyapi.com/graphql",
    cache: new InMemoryCache(),
  });

  const { data } = await client.query({
    query: gql`
      query {
        locations {
          info {
            next
            prev
          }
          results {
            id
            name
            type
          }
        }
      }
    `,
  });

  return {
    props: {
      locations: data.locations.results,
    },
  };
};
