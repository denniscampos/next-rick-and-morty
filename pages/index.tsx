import type { NextPage } from 'next'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import {
  ApolloClient,
  InMemoryCache,
  gql
} from "@apollo/client";

// better name? 
interface Props {
  locations: Props[],
  id: number,
  name: string,
  type: string,
}


const Home: NextPage<Props> = ({ locations }: Props) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Rick and Morty</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
        <h1>Rick and Morty</h1>
        {locations.map((location) => (
          <div key={location.id}>
            <h3>Location Name: {location.name}</h3>
            <span>Type: {location.type}</span>
          </div>
        ))}
    </div>
  )
}

export default Home

export async function getStaticProps() {

  const client = new ApolloClient({
    uri: 'https://rickandmortyapi.com/graphql',
    cache: new InMemoryCache()
  })

  const { data } = await client.query({
    query: gql`
    query {
      locations {
        info {
          next
          prev
        }
        results {
          id
          name
          type
          residents {
            id
            name
            status
          }
        }
      }
    }
    `
  })

  return {
    props: {
      locations: data.locations.results,
      pagination: data.locations.info
    }, // will be passed to the page component as props
  }
}
